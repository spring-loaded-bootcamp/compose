services:
  configserver:
    image: configserver:0.0.1-SNAPSHOT
    ports:
      - "8888:8888"
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
  ngrok:
    image: ngrok/ngrok:latest
    command: http hello:8080
    environment:
      - NGROK_AUTHTOKEN=YOUR_AUTH_TOKEN
    ports:
      - "4040:4040"
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
  rabbitmq:
    image: 'rabbitmq:latest'
    environment:
      - 'RABBITMQ_DEFAULT_PASS=secret'
      - 'RABBITMQ_DEFAULT_USER=myuser'
    ports:
      - '5672:5672'
  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
  simple:
    image: simple:0.0.1-SNAPSHOT
    restart: unless-stopped
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8888
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  tempo-init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./.docker/tempo:/var/tempo
  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./.docker/tempo.yaml:/etc/tempo.yaml
      - ./.docker/tempo-data:/var/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    depends_on:
      - tempo-init
